#!/usr/bin/env ansible-playbook
---
- name: Install Editor
  hosts: sandboxes
  become: False
  tasks:
    - name: "Add git repo"
      become: True
      ansible.builtin.apt_repository:
        repo: ppa:git-core/ppa
    - name: "Add neovim repo"
      become: True
      ansible.builtin.apt_repository:
        repo: ppa:neovim-ppa/stable
    - name: "Install Packages"
      become: True
      package:
        name: 
          - neovim
          - sqlite3
          - libsqlite3-dev
          - gcc # treesitter
          - build-essential # treesitter
          - fzf # Search
          - ripgrep # Telescope
          - git
        update_cache: True
    - name: Make sure ssk keys are passed to guest.
      local_action: command ssh-add
    - name: Download dot-files
      ansible.builtin.git:
        repo: git@github.com:jandvanegas/dot-files.git
        dest: "{{ ansible_env.HOME }}/dot-files"
        accept_hostkey: yes
    - name: Create lua directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/nvim/lua"
        state: directory
    - name: Create symlink for neovim
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/dot-files/config/nvim/init.lua"
        dest: "{{ ansible_env.HOME }}/.config/nvim/init.lua"
        state: link
    - name: Create symlink for neovim 2
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/dot-files/config/nvim/lua/user"
        dest: "{{ ansible_env.HOME }}/.config/nvim/lua/user"
        state: link
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: ~/.local/share/nvim/databases
        state: directory
    - name: Create symlink for Tmux
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/dot-files/.tmux.conf"
        dest: "{{ ansible_env.HOME }}/.tmux.conf"
        state: link
    - name: Create symlink for Tmux 2
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/dot-files/tmux_dev.sh"
        dest: "{{ ansible_env.HOME }}/tmux_dev.sh"
        state: link

- name: Install Tmux
  hosts: sandboxes
  become: False
  tasks:
    - name: "Install Packages"
      become: True
      package:
        name: 
          - tmux
        update_cache: True
    - name: Download tpm, Tmux plugin manager
      ansible.builtin.git:
        repo: https://github.com/tmux-plugins/tpm
        dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"
        accept_hostkey: yes
- name: Install zsh
  hosts: sandboxes
  become: False
  tasks:
    - name: "Install Packages"
      become: True
      package:
        name:
          - zsh
    - name: Change shell
      become: True
      user:
        name: vagrant
        shell: /bin/zsh
    - name: "Check if oh my zsh exists"
      stat:
        path: "{{ ansible_env.HOME }}/.oh-my-zsh"
      register: result
    - name: Download oh-my-zsh
      when: (result.stat.isreg is undefined) or (not result.stat.isreg)
      ansible.builtin.git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh"
    - name: Powerlevel10k
      when: (result.stat.isreg is undefined) or (not result.stat.isreg)
      ansible.builtin.git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
        depth: 1
    - name: Set default zsh config
      when: (result.stat.isreg is undefined) or (not result.stat.isreg)
      ansible.builtin.copy:
        src: .zshrc
        dest: "{{ ansible_env.HOME }}/.zshrc"
    - name: Set powerlevel10k config
      when: (result.stat.isreg is undefined) or (not result.stat.isreg)
      ansible.builtin.copy:
        src: .p10k.zsh
        dest: "{{ ansible_env.HOME }}/.p10k.zsh"
    - name: Zsh autosuggestions
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/plugins/zsh-autosuggestions"
        depth: 1
    - name: Zsh syntax highlight
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/plugins/zsh-syntax-highlighting"
        depth: 1
